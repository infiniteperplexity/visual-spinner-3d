Engine:
- Allow optional planes per node, upon the first time I need it.
- Are defaults injected in the right places?  Probably not, given that object spread is the single biggest performance hog.  Much less of a problem now that I cache the fitted moves.
- Various fitting methods still don't handle plane breaks (fits does check it correctly, but not bends)
- GRIP is untested in combination with BENT and TWIST.
- GRIP seems to display wrong for FLOOR plane, dunno why, something with bearings and angles.  Or maybe it's the optional planes per node?
- Over and under-solving are causing recurring problems.
- Might want to actually make PIVOT named SHOULDER and so on.
- Does resolve() keep spin?

Apps:
- Add video to the exhibit.
- Would be nice if we could export this stuff in a way that's actually kind of readable.

Bugs:
- The refitting approach I used to save the comborific.json got a few things wrong, including twist and a handful of positions.  This may not still be the case, though.

	Nice:
	- Might want to remove default properties when exporting.
	- Make looking at a move in the wrong plane more sensible.

	General:
	- Mucho testing.


- Maybe let locking a node zeroify it?



- Maybe should drag using tethers, in case something gets pulled off screen?.


- Sure would be nice to remove zero nodes from the saved files.


*****TWIST & VT******

- Maybe we should fit twist whenever the plane doesn't change?

- Oh...we can't actually re-angle a zero hand node in a transition.

- Is combinating still a thing?


- should any change in radius default to linear movement in the editor?

- drag insert doesn't bump time codes.  hmmm...should it?  that's a tough one.  I think yes...that's tough because it's gonna have to do it for changed duration as well.

- The unscrolled [+] at the end creeps further and further over as the routine gets longer.  Sometimes snapping to wrong thing?

-speedmeter shows forward bend as backwards

****for the "direct edit" mode****

the interface sometimes lies to you about how it's rounding.

